
root@4694741-uoles:/home/uoles/OtusClickHouseHW/docker# docker-compose -f docker-compose-backup.yml up -d
WARNING: Found orphan containers (exporter) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up.
Creating minio ... done
Creating docker_createbuckets_1 ... done
Creating clickhouse-server-2    ... done
Creating clickhouse-server-1    ... done
root@4694741-uoles:/home/uoles/OtusClickHouseHW/docker# docker ps
CONTAINER ID   IMAGE                           COMMAND                  CREATED          STATUS                    PORTS                                                                                                    NAMES
91dfa4955e51   uoles/clickhouse-minio:25.2.1   "/entrypoint.sh"         8 seconds ago    Up 8 seconds              9009/tcp, 0.0.0.0:18123->8123/tcp, [::]:18123->8123/tcp, 0.0.0.0:19000->9000/tcp, [::]:19000->9000/tcp   clickhouse-server-1
d9701600f551   uoles/clickhouse:25.2.1         "/entrypoint.sh"         8 seconds ago    Up 8 seconds              9009/tcp, 0.0.0.0:28123->8123/tcp, [::]:28123->8123/tcp, 0.0.0.0:29000->9000/tcp, [::]:29000->9000/tcp   clickhouse-server-2
2f7956f3a77b   quay.io/minio/minio             "/usr/bin/docker-entâ€¦"   14 seconds ago   Up 13 seconds (healthy)   9000/tcp, 0.0.0.0:10000-10001->10000-10001/tcp, [::]:10000-10001->10000-10001/tcp                        minio
root@4694741-uoles:/home/uoles/OtusClickHouseHW/docker# docker exec -it clickhouse-server-2 bash
root@clickhouse-server-2:/# /usr/local/bin/clickhouse-backup -v
Version:         2.6.16
Git Commit:      eb63513b649f2709281ebb0ca70d6ae67b34ec4c
Build Date:      2025-05-03
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/# clickhouse-backup create_remote mybackup_database_remote -t 'my_database.*'
2025-05-07 05:17:49.483 INF pkg/clickhouse/clickhouse.go:131 > clickhouse connection prepared: tcp://localhost:9000 run ping
2025-05-07 05:17:49.488 INF pkg/clickhouse/clickhouse.go:134 > clickhouse connection success: tcp://localhost:9000
2025-05-07 05:17:49.489 INF pkg/clickhouse/clickhouse.go:1163 > SELECT value FROM `system`.`build_options` where name='VERSION_INTEGER'
2025-05-07 05:17:49.507 INF pkg/clickhouse/clickhouse.go:1163 > SELECT data_path AS metadata_path FROM system.databases WHERE name = 'system' LIMIT 1
2025-05-07 05:17:49.510 INF pkg/clickhouse/clickhouse.go:1163 > SELECT name, engine FROM system.databases WHERE NOT match(name,'^(system|INFORMATION_SCHEMA|information_schema|_temporary_and_external_tables)$') AND match(name,'^(my_database)$')
2025-05-07 05:17:49.514 INF pkg/clickhouse/clickhouse.go:1163 > SHOW CREATE DATABASE `my_database`
2025-05-07 05:17:49.517 INF pkg/clickhouse/clickhouse.go:1161 > SELECT name, count(*) as is_present FROM system.settings WHERE name IN (?, ?) GROUP BY name with args []interface {}{"show_table_uuid_in_table_create_query_if_not_nil", "display_secrets_in_show_and_select"}
2025-05-07 05:17:49.531 INF pkg/clickhouse/clickhouse.go:1163 > SELECT name FROM system.databases WHERE engine IN ('MySQL','PostgreSQL','MaterializedPostgreSQL')
2025-05-07 05:17:49.534 INF pkg/clickhouse/clickhouse.go:1163 >    SELECT     countIf(name='data_path') is_data_path_present,     countIf(name='data_paths') is_data_paths_present,     countIf(name='uuid') is_uuid_present,     countIf(name='create_table_query') is_create_table_query_present,     countIf(name='total_bytes') is_total_bytes_present    FROM system.columns WHERE database='system' AND table='tables'
2025-05-07 05:17:49.540 INF pkg/clickhouse/clickhouse.go:1163 > SELECT database, name, engine , data_paths , uuid , create_table_query , coalesce(total_bytes, 0) AS total_bytes   FROM system.tables WHERE is_temporary = 0 AND match(concat(database,'.',name),'^my_database\..*$')  ORDER BY total_bytes DESC SETTINGS show_table_uuid_in_table_create_query_if_not_nil=1
2025-05-07 05:17:49.581 INF pkg/clickhouse/clickhouse.go:1163 > SELECT data_path AS metadata_path FROM system.databases WHERE name = 'system' LIMIT 1
2025-05-07 05:17:49.583 INF pkg/clickhouse/clickhouse.go:1163 > SELECT count() as cnt FROM system.columns WHERE database='system' AND table='functions' AND name='create_query' SETTINGS empty_result_for_aggregation_by_empty_set=0
2025-05-07 05:17:49.586 INF pkg/clickhouse/clickhouse.go:1163 > SELECT name, create_query FROM system.functions WHERE create_query!=''
2025-05-07 05:17:49.592 INF pkg/clickhouse/clickhouse.go:1163 > SELECT countIf(name='type') AS is_disk_type_present, countIf(name='object_storage_type') AS is_object_storage_type_present, countIf(name='free_space') AS is_free_space_present, countIf(name='disks') AS is_storage_policy_present FROM system.columns WHERE database='system' AND table IN ('disks','storage_policies')
2025-05-07 05:17:49.596 INF pkg/clickhouse/clickhouse.go:1163 > SELECT d.path AS path, any(d.name) AS name, any(lower(if(d.type='ObjectStorage',d.object_storage_type,d.type))) AS type, min(d.free_space) AS free_space, groupUniqArray(s.policy_name) AS storage_policies FROM system.disks AS d  LEFT JOIN (SELECT policy_name, arrayJoin(disks) AS disk FROM system.storage_policies) AS s ON s.disk = d.name GROUP BY d.path
2025-05-07 05:17:49.618 INF pkg/clickhouse/clickhouse.go:1163 > SELECT name FROM system.user_directories WHERE type='replicated'
2025-05-07 05:17:49.621 INF pkg/clickhouse/clickhouse.go:1163 > SELECT JSONExtractString(params,'path') AS access_path FROM system.user_directories WHERE type in ('local_directory','local directory')
2025-05-07 05:17:49.624 INF pkg/backup/create.go:181 > done createBackupRBAC size=0B
2025-05-07 05:17:49.625 INF pkg/clickhouse/clickhouse.go:1161 > SELECT column, groupUniqArray(type) AS uniq_types FROM system.parts_columns WHERE active AND database=? AND table=? AND type NOT LIKE 'Enum%(%' AND type NOT LIKE 'Tuple(%' AND type NOT LIKE 'Nullable(Enum%(%' AND type NOT LIKE 'Nullable(Tuple(%' AND type NOT LIKE 'Array(Tuple(%' AND type NOT LIKE 'Nullable(Array(Tuple(%' GROUP BY column HAVING length(uniq_types) > 1 with args []interface {}{"my_database", "test_table_2"}
2025-05-07 05:17:49.632 INF pkg/clickhouse/clickhouse.go:1163 > ALTER TABLE `my_database`.`test_table_2` FREEZE WITH NAME '49ec566330dd421a93ed408515d9ee0d';
2025-05-07 05:17:49.637 INF pkg/clickhouse/clickhouse.go:1163 > ALTER TABLE `my_database`.`test_table_2` UNFREEZE WITH NAME '49ec566330dd421a93ed408515d9ee0d'
2025-05-07 05:17:49.638 INF pkg/clickhouse/clickhouse.go:1161 > SELECT mutation_id, command FROM system.mutations WHERE is_done=0 AND database=? AND table=? with args []interface {}{"my_database", "test_table_2"}
2025-05-07 05:17:49.642 INF pkg/backup/create.go:351 > done progress=1/1 table=my_database.test_table_2
2025-05-07 05:17:49.642 INF pkg/clickhouse/clickhouse.go:1163 > SELECT value FROM `system`.`build_options` WHERE name='VERSION_DESCRIBE'
2025-05-07 05:17:49.645 INF pkg/backup/create.go:363 > done duration=162ms operation=createBackupLocal version=2.6.16
2025-05-07 05:17:49.645 INF pkg/clickhouse/clickhouse.go:336 > clickhouse connection closed
2025-05-07 05:17:49.645 INF pkg/clickhouse/clickhouse.go:131 > clickhouse connection prepared: tcp://localhost:9000 run ping
2025-05-07 05:17:49.646 INF pkg/clickhouse/clickhouse.go:134 > clickhouse connection success: tcp://localhost:9000
2025-05-07 05:17:49.646 INF pkg/clickhouse/clickhouse.go:1163 > SELECT countIf(name='type') AS is_disk_type_present, countIf(name='object_storage_type') AS is_object_storage_type_present, countIf(name='free_space') AS is_free_space_present, countIf(name='disks') AS is_storage_policy_present FROM system.columns WHERE database='system' AND table IN ('disks','storage_policies')
2025-05-07 05:17:49.650 INF pkg/clickhouse/clickhouse.go:1163 > SELECT d.path AS path, any(d.name) AS name, any(lower(if(d.type='ObjectStorage',d.object_storage_type,d.type))) AS type, min(d.free_space) AS free_space, groupUniqArray(s.policy_name) AS storage_policies FROM system.disks AS d  LEFT JOIN (SELECT policy_name, arrayJoin(disks) AS disk FROM system.storage_policies) AS s ON s.disk = d.name GROUP BY d.path
2025-05-07 05:17:49.658 INF pkg/clickhouse/clickhouse.go:1163 > SELECT max(toInt64(bytes_on_disk * 1.02)) AS max_file_size FROM system.parts WHERE active SETTINGS empty_result_for_aggregation_by_empty_set=0
2025-05-07 05:17:49.663 INF pkg/clickhouse/clickhouse.go:1163 > SELECT count() AS is_macros_exists FROM system.tables WHERE database='system' AND name='macros'  SETTINGS empty_result_for_aggregation_by_empty_set=0
2025-05-07 05:17:49.667 INF pkg/clickhouse/clickhouse.go:1163 > SELECT macro, substitution FROM system.macros
2025-05-07 05:17:49.668 INF pkg/clickhouse/clickhouse.go:1163 > SELECT count() AS is_macros_exists FROM system.tables WHERE database='system' AND name='macros'  SETTINGS empty_result_for_aggregation_by_empty_set=0
2025-05-07 05:17:49.738 INF pkg/clickhouse/clickhouse.go:1163 > SELECT macro, substitution FROM system.macros
2025-05-07 05:17:49.759 INF pkg/storage/general.go:163 > list_duration=5.715985
2025-05-07 05:17:49.790 INF pkg/backup/upload.go:184 > done data_size=9.00KiB duration=17ms metadata_size=457B operation=upload_table progress=1/1 table=my_database.test_table_2 version=2.6.16
2025-05-07 05:17:49.796 INF pkg/backup/upload.go:256 > done backup=mybackup_database_remote duration=151ms object_disk_size=0B operation=upload upload_size=10.04KiB version=2.6.16
2025-05-07 05:17:49.796 INF pkg/clickhouse/clickhouse.go:336 > clickhouse connection closed
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/#
root@clickhouse-server-2:/# clickhouse-backup restore_remote mybackup_database_remote -t 'my_database.*'
2025-05-07 05:29:54.252 INF pkg/clickhouse/clickhouse.go:131 > clickhouse connection prepared: tcp://localhost:9000 run ping
2025-05-07 05:29:54.254 INF pkg/clickhouse/clickhouse.go:134 > clickhouse connection success: tcp://localhost:9000
2025-05-07 05:29:54.255 INF pkg/clickhouse/clickhouse.go:1163 > SELECT value FROM `system`.`build_options` where name='VERSION_INTEGER'
2025-05-07 05:29:54.258 INF pkg/clickhouse/clickhouse.go:1163 > SELECT countIf(name='type') AS is_disk_type_present, countIf(name='object_storage_type') AS is_object_storage_type_present, countIf(name='free_space') AS is_free_space_present, countIf(name='disks') AS is_storage_policy_present FROM system.columns WHERE database='system' AND table IN ('disks','storage_policies')
2025-05-07 05:29:54.262 INF pkg/clickhouse/clickhouse.go:1163 > SELECT d.path AS path, any(d.name) AS name, any(lower(if(d.type='ObjectStorage',d.object_storage_type,d.type))) AS type, min(d.free_space) AS free_space, groupUniqArray(s.policy_name) AS storage_policies FROM system.disks AS d  LEFT JOIN (SELECT policy_name, arrayJoin(disks) AS disk FROM system.storage_policies) AS s ON s.disk = d.name GROUP BY d.path
2025-05-07 05:29:54.279 INF pkg/clickhouse/clickhouse.go:336 > clickhouse connection closed
2025-05-07 05:29:54.279 INF pkg/clickhouse/clickhouse.go:131 > clickhouse connection prepared: tcp://localhost:9000 run ping
2025-05-07 05:29:54.281 INF pkg/clickhouse/clickhouse.go:134 > clickhouse connection success: tcp://localhost:9000
2025-05-07 05:29:54.281 INF pkg/clickhouse/clickhouse.go:1163 > SELECT countIf(name='type') AS is_disk_type_present, countIf(name='object_storage_type') AS is_object_storage_type_present, countIf(name='free_space') AS is_free_space_present, countIf(name='disks') AS is_storage_policy_present FROM system.columns WHERE database='system' AND table IN ('disks','storage_policies')
2025-05-07 05:29:54.287 INF pkg/clickhouse/clickhouse.go:1163 > SELECT d.path AS path, any(d.name) AS name, any(lower(if(d.type='ObjectStorage',d.object_storage_type,d.type))) AS type, min(d.free_space) AS free_space, groupUniqArray(s.policy_name) AS storage_policies FROM system.disks AS d  LEFT JOIN (SELECT policy_name, arrayJoin(disks) AS disk FROM system.storage_policies) AS s ON s.disk = d.name GROUP BY d.path
2025-05-07 05:29:54.294 INF pkg/clickhouse/clickhouse.go:1161 > CREATE DATABASE IF NOT EXISTS `my_database` ENGINE = Atomic with args []interface {}{[]interface {}(nil)}
2025-05-07 05:29:54.296 INF pkg/clickhouse/clickhouse.go:1163 > DROP TABLE IF EXISTS `my_database`.`test_table_2` NO DELAY
2025-05-07 05:29:54.297 INF pkg/clickhouse/clickhouse.go:1163 > CREATE DATABASE IF NOT EXISTS `my_database` ENGINE=Atomic
2025-05-07 05:29:54.297 INF pkg/clickhouse/clickhouse.go:1163 > CREATE TABLE my_database.test_table_2 UUID 'e8c225f9-564e-4ef4-8943-6b0333cf509e' (`id` UInt64, `column1` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8192
2025-05-07 05:29:54.304 INF pkg/backup/restore.go:942 > done backup=mybackup_database_remote duration=8ms operation=restore_schema
2025-05-07 05:29:54.304 INF pkg/clickhouse/clickhouse.go:1163 > SELECT count() AS is_macros_exists FROM system.tables WHERE database='system' AND name='macros'  SETTINGS empty_result_for_aggregation_by_empty_set=0
2025-05-07 05:29:54.307 INF pkg/clickhouse/clickhouse.go:1163 > SELECT macro, substitution FROM system.macros
2025-05-07 05:29:54.310 INF pkg/clickhouse/clickhouse.go:1161 > SELECT name, count(*) as is_present FROM system.settings WHERE name IN (?, ?) GROUP BY name with args []interface {}{"show_table_uuid_in_table_create_query_if_not_nil", "display_secrets_in_show_and_select"}
2025-05-07 05:29:54.318 INF pkg/clickhouse/clickhouse.go:1163 > SELECT name FROM system.databases WHERE engine IN ('MySQL','PostgreSQL','MaterializedPostgreSQL')
2025-05-07 05:29:54.320 INF pkg/clickhouse/clickhouse.go:1163 >    SELECT     countIf(name='data_path') is_data_path_present,     countIf(name='data_paths') is_data_paths_present,     countIf(name='uuid') is_uuid_present,     countIf(name='create_table_query') is_create_table_query_present,     countIf(name='total_bytes') is_total_bytes_present    FROM system.columns WHERE database='system' AND table='tables'
2025-05-07 05:29:54.324 INF pkg/clickhouse/clickhouse.go:1163 > SELECT database, name, engine , data_paths , uuid , create_table_query , coalesce(total_bytes, 0) AS total_bytes   FROM system.tables WHERE is_temporary = 0 AND match(concat(database,'.',name),'^my_database\..*$')  ORDER BY total_bytes DESC SETTINGS show_table_uuid_in_table_create_query_if_not_nil=1
2025-05-07 05:29:54.360 INF pkg/clickhouse/clickhouse.go:1163 > SELECT data_path AS metadata_path FROM system.databases WHERE name = 'system' LIMIT 1
2025-05-07 05:29:54.362 INF pkg/clickhouse/clickhouse.go:1163 > SELECT sum(bytes_on_disk) as size FROM system.parts WHERE active AND database='my_database' AND table='test_table_2' GROUP BY database, table
2025-05-07 05:29:54.367 INF pkg/backup/restore.go:1501 > download object_disks start table=my_database.test_table_2
2025-05-07 05:29:54.368 INF pkg/backup/restore.go:1508 > download object_disks finish duration=0s size=0B
2025-05-07 05:29:54.368 INF pkg/clickhouse/clickhouse.go:1163 > ALTER TABLE `my_database`.`test_table_2` ATTACH PART 'all_1_1_0'
2025-05-07 05:29:54.373 INF pkg/backup/restore.go:1461 > done database=my_database duration=8ms operation=restoreDataRegular progress=1/1 table=test_table_2
2025-05-07 05:29:54.374 INF pkg/backup/restore.go:1373 > done backup=mybackup_database_remote duration=70ms operation=restore_data
2025-05-07 05:29:54.374 INF pkg/backup/restore.go:261 > done duration=95ms operation=restore version=2.6.16
2025-05-07 05:29:54.374 INF pkg/clickhouse/clickhouse.go:336 > clickhouse connection closed
root@clickhouse-server-2:/#
